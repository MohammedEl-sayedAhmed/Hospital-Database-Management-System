<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AgCAIAgCAIAgCAIAgCAIAgCAIAgCAID/2Q==
</value>
  </data>
</root>